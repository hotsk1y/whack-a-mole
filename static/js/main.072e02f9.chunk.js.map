{"version":3,"sources":["components/Score/Score.jsx","store/reducers/statisticsReducer.js","components/Timer/Timer.jsx","store/reducers/logicStuffReducer.js","store/reducers/gameReducer.js","store/reducers/fieldReducer.js","components/Cell/Cell.jsx","components/Field/Field.jsx","healper.js","components/Attempts/Attempts.jsx","components/Modal/Modal.jsx","components/Game/Game.jsx","App.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["Score","score","useSelector","state","statistics","className","dafaultStatisticsState","timer","timerInterval","attempts","TIMER","TIMER_INTERVAL","SCORE","ATTEMPTS","setTimerAction","payload","type","setScoreAction","setAttemptsAction","Timer","dispatch","useDispatch","setTimer","useEffect","counter","setInterval","clearInterval","dafaultLogicStuffState","randomCell","RANDOM_CELL","setRandomCellAction","dafaultGameState","isGameStarted","isGameOver","isWin","IS_GAME_STARTED","IS_GAME_OVER","IS_WIN","setIsGameStartedAction","setIsGameOverAction","setIsWinAction","dafaultFieldState","activeIndex","ACTIVE_INDEX","Cell","id","handleClick","activeMole","onClick","Field","field","Array","fill","logic","setAttempts","setActiveIndex","setActiveIndexAction","changeGameSpeed","calcDelay","setTimeout","checkResult","setIsWin","timerRandomCellIndex","result","Math","floor","random","clearTimeout","interval","map","_","Attempts","Modal","startGame","game","round","Game","App","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.072e02f9.chunk.js","sourcesContent":["import './Score.css'\r\n\r\nimport { React } from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Score = () => {\r\n  const { score } = useSelector((state) => state.statistics)\r\n\r\n  return <div className=\"game__component score\">Score: {score}</div>\r\n}\r\n\r\nexport default Score\r\n","const dafaultStatisticsState = {\r\n  timer: 4,\r\n  timerInterval: 1000,\r\n  score: 0,\r\n  attempts: 0,\r\n}\r\n\r\nexport const TIMER = 'TIMER'\r\nexport const TIMER_INTERVAL = 'TIMER_INTERVAL'\r\nexport const SCORE = 'SCORE'\r\nexport const ATTEMPTS = 'ATTEMPTS'\r\n\r\nexport const statisticsReducer = (state = dafaultStatisticsState, action) => {\r\n  switch (action.type) {\r\n    case TIMER:\r\n      return { ...state, timer: action.payload }\r\n    case TIMER_INTERVAL:\r\n      return { ...state, timerInterval: action.payload }\r\n    case SCORE:\r\n      return { ...state, score: action.payload }\r\n    case ATTEMPTS:\r\n      return { ...state, attempts: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setTimerAction = (payload) => ({\r\n  type: TIMER,\r\n  payload,\r\n})\r\nexport const setTimerIntervalAction = (payload) => ({\r\n  type: TIMER_INTERVAL,\r\n  payload,\r\n})\r\nexport const setScoreAction = (payload) => ({\r\n  type: SCORE,\r\n  payload,\r\n})\r\nexport const setAttemptsAction = (payload) => ({\r\n  type: ATTEMPTS,\r\n  payload,\r\n})\r\n","import './Timer.css'\r\n\r\nimport { React, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setTimerAction } from '../../store/reducers/statisticsReducer'\r\n\r\nconst Timer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { timer, timerInterval } = useSelector((state) => state.statistics)\r\n  const setTimer = (payload) => {\r\n    dispatch(setTimerAction(payload))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const counter =\r\n      timer > 0 && setInterval(() => setTimer(timer - 1), timerInterval)\r\n    return () => clearInterval(counter)\r\n  }, [timer, setTimer, timerInterval])\r\n\r\n  return (\r\n    <div className=\"game__component timer\">\r\n      {timer < 1 ? 'Time over' : `Time: ${timer}`}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","const dafaultLogicStuffState = {\r\n  randomCell: null,\r\n}\r\n\r\nexport const RANDOM_CELL = 'RANDOM_CELL'\r\n\r\nexport const logicStuffReducer = (state = dafaultLogicStuffState, action) => {\r\n  switch (action.type) {\r\n    case RANDOM_CELL:\r\n      return { ...state, randomCell: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setRandomCellAction = (payload) => ({\r\n  type: RANDOM_CELL,\r\n  payload,\r\n})\r\n","const dafaultGameState = {\r\n  isGameStarted: false,\r\n  isGameOver: false,\r\n  isWin: false,\r\n}\r\n\r\nexport const IS_GAME_STARTED = 'GAME_IS_STARTED'\r\nexport const IS_GAME_OVER = 'IS_GAME_OVER'\r\nexport const IS_WIN = 'IS_WIN'\r\n\r\nexport const gameReducer = (state = dafaultGameState, action) => {\r\n  switch (action.type) {\r\n    case IS_GAME_STARTED:\r\n      return { ...state, isGameStarted: action.payload }\r\n    case IS_GAME_OVER:\r\n      return { ...state, isGameOver: action.payload }\r\n    case IS_WIN:\r\n      return { ...state, isWin: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setIsGameStartedAction = (payload) => ({\r\n  type: IS_GAME_STARTED,\r\n  payload,\r\n})\r\nexport const setIsGameOverAction = (payload) => ({\r\n  type: IS_GAME_OVER,\r\n  payload,\r\n})\r\nexport const setIsWinAction = (payload) => ({\r\n  type: IS_WIN,\r\n  payload,\r\n})\r\n","const dafaultFieldState = {\r\n  activeIndex: null,\r\n}\r\n\r\nexport const ACTIVE_INDEX = 'ACTIVE_INDEX'\r\n\r\nexport const fieldReducer = (state = dafaultFieldState, action) => {\r\n  switch (action.type) {\r\n    case ACTIVE_INDEX:\r\n      return { ...state, activeIndex: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setActiveIndexAction = (payload) => ({\r\n  type: ACTIVE_INDEX,\r\n  payload,\r\n})\r\n","import './Cell.css'\r\n\r\nimport { React } from 'react'\r\n\r\nconst Cell = ({ id, handleClick, activeMole, activeIndex }) => {\r\n  const moleActiveClass = () => {\r\n    if (activeMole === id && activeIndex === 'hit') {\r\n      return 'cell cell--active cell--hit'\r\n    } else if (activeMole === id && activeIndex === 'miss') {\r\n      return 'cell cell--active cell--miss'\r\n    } else if (activeMole === id) {\r\n      return 'cell cell--active'\r\n    } else {\r\n      return 'cell'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={moleActiveClass()} onClick={() => handleClick(id)}></div>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import './Field.css'\r\n\r\nimport { React, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { calcDelay } from '../../healper'\r\n\r\nimport { setRandomCellAction } from '../../store/reducers/logicStuffReducer'\r\nimport {\r\n  setScoreAction,\r\n  setTimerAction,\r\n  setTimerIntervalAction,\r\n  setAttemptsAction,\r\n} from '../../store/reducers/statisticsReducer'\r\nimport {\r\n  setIsGameOverAction,\r\n  setIsWinAction,\r\n} from '../../store/reducers/gameReducer'\r\nimport { setActiveIndexAction } from '../../store/reducers/fieldReducer'\r\n\r\nimport Cell from '../Cell/Cell'\r\n\r\nconst Field = () => {\r\n  const field = Array(9).fill(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { randomCell } = useSelector((state) => state.logic)\r\n\r\n  const { score, timer, attempts } = useSelector((state) => state.statistics)\r\n\r\n  const setTimer = (payload) => {\r\n    dispatch(setTimerAction(payload))\r\n  }\r\n  const setAttempts = (payload) => {\r\n    dispatch(setAttemptsAction(payload))\r\n  }\r\n\r\n  const setIsWin = (payload) => {\r\n    dispatch(setIsWinAction(payload))\r\n  }\r\n  const setIsGameOver = (payload) => {\r\n    dispatch(setIsGameOverAction(payload))\r\n  }\r\n\r\n  const { activeIndex } = useSelector((state) => state.field)\r\n  const setActiveIndex = (payload) => {\r\n    dispatch(setActiveIndexAction(payload))\r\n  }\r\n\r\n  const changeGameSpeed = () => {\r\n    dispatch(setTimerIntervalAction(calcDelay(score)))\r\n  }\r\n\r\n  const handleClick = (id) => {\r\n    if (randomCell === id && timer > 0) {\r\n      setActiveIndex('hit')\r\n      setTimeout(() => {\r\n        dispatch(setScoreAction(score + 1))\r\n        dispatch(setRandomCellAction(null))\r\n        setTimer(4)\r\n      }, 40)\r\n    } else if (randomCell !== id && timer > 0) {\r\n      setActiveIndex('miss')\r\n      setTimeout(() => {\r\n        setTimer(4)\r\n        setAttempts(attempts + 1)\r\n      }, 40)\r\n    }\r\n  }\r\n\r\n  const checkResult = () => {\r\n    if (attempts === 3 || score >= 100) {\r\n      setTimer(0)\r\n      setIsGameOver(true)\r\n      setTimer(0)\r\n    }\r\n    if (score === 100) {\r\n      setIsWin(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timerRandomCellIndex = setTimeout(() => {\r\n      const result = Math.floor(Math.random() * 9)\r\n      dispatch(setRandomCellAction(result))\r\n    }, 20)\r\n    return () => {\r\n      clearTimeout(timerRandomCellIndex)\r\n    }\r\n  }, [score, attempts])\r\n\r\n  useEffect(() => {\r\n    if (score === 100) {\r\n      setTimer(0)\r\n    }\r\n    if (timer === 0 && attempts < 3 && score < 100) {\r\n      setActiveIndex('miss')\r\n      setTimeout(() => {\r\n        setTimer(4)\r\n        setAttempts(attempts + 1)\r\n      }, 40)\r\n    }\r\n  }, [timer, attempts])\r\n\r\n  useEffect(() => {\r\n    checkResult()\r\n    changeGameSpeed()\r\n  }, [score, attempts])\r\n\r\n  useEffect(() => {\r\n    if (activeIndex) {\r\n      const interval = setInterval(() => {\r\n        setActiveIndex(null)\r\n      }, 40)\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [activeIndex])\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      {field.map((_, id) => (\r\n        <Cell\r\n          key={id}\r\n          id={id}\r\n          handleClick={handleClick}\r\n          activeMole={randomCell}\r\n          activeIndex={activeIndex}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Field\r\n","export const calcDelay = (score) => {\r\n  if (score <= 10) {\r\n    return 1000\r\n  }\r\n  if (score <= 20) {\r\n    return 900\r\n  }\r\n  if (score <= 30) {\r\n    return 800\r\n  }\r\n  if (score <= 40) {\r\n    return 700\r\n  }\r\n  if (score <= 50) {\r\n    return 600\r\n  }\r\n  if (score <= 60) {\r\n    return 500\r\n  }\r\n  if (score <= 70) {\r\n    return 400\r\n  }\r\n  if (score <= 80) {\r\n    return 300\r\n  }\r\n  if (score <= 90) {\r\n    return 200\r\n  }\r\n  if (score <= 100) {\r\n    return 150\r\n  }\r\n}\r\n","import './Attempts.css'\r\n\r\nimport { React } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Attempts = () => {\r\n  const { attempts } = useSelector((state) => state.statistics)\r\n\r\n  return <div className=\"game__component attemps\">Attempts: {attempts}/3</div>\r\n}\r\n\r\nexport default Attempts\r\n","import './Modal.css'\r\n\r\nimport { React } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { setIsGameOverAction } from '../../store/reducers/gameReducer'\r\n\r\nconst Modal = ({ startGame }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { score, attempts } = useSelector((state) => state.statistics)\r\n\r\n  const { isWin } = useSelector((state) => state.game)\r\n  const setIsGameOver = (payload) => {\r\n    dispatch(setIsGameOverAction(payload))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setIsGameOver(false)\r\n    startGame()\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__content\">\r\n        <div className=\"modal__title\">{isWin ? 'You Win!' : 'Try Again!'}</div>\r\n        <div className=\"win__status\">\r\n          <div className=\"win__status-item\">\r\n            Game difficult: {Math.round(score / 10)}\r\n          </div>\r\n          <div className=\"win__status-item\">Score: {score}/100 point(s)</div>\r\n          <div className=\"win__status-item\">You failed: {attempts} time(s)</div>\r\n        </div>\r\n        <button onClick={() => handleClick()}>Start New Game</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import './Game.css'\r\n\r\nimport { React } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Score from '../Score/Score'\r\nimport Timer from '../Timer/Timer'\r\nimport Field from '../Field/Field'\r\nimport Attempts from '../Attempts/Attempts'\r\nimport Modal from '../Modal/Modal'\r\n\r\nimport {\r\n  setIsGameStartedAction,\r\n  setIsWinAction,\r\n} from '../../store/reducers/gameReducer'\r\n\r\nimport {\r\n  setTimerAction,\r\n  setScoreAction,\r\n  setAttemptsAction,\r\n} from '../../store/reducers/statisticsReducer'\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { isGameStarted, isGameOver } = useSelector((state) => state.game)\r\n\r\n  const startGame = () => {\r\n    dispatch(setScoreAction(0))\r\n    dispatch(setTimerAction(4))\r\n    dispatch(setAttemptsAction(0))\r\n    dispatch(setIsGameStartedAction(true))\r\n    dispatch(setIsWinAction(false))\r\n  }\r\n\r\n  const stopGame = () => {\r\n    dispatch(setIsGameStartedAction(false))\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game__title\">\r\n        {!isGameStarted && <h1>Whack a Mole</h1>}\r\n        <button onClick={isGameStarted ? stopGame : startGame}>\r\n          {isGameStarted ? 'Stop Game' : 'Start Game'}\r\n        </button>\r\n      </div>\r\n      {isGameStarted && <Score />}\r\n      {isGameStarted && <Attempts />}\r\n      {isGameStarted && <Timer />}\r\n      {isGameStarted && <Field />}\r\n      {isGameOver && <Modal startGame={startGame} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import './App.css'\nimport Game from './components/Game/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\r\n\r\nimport { gameReducer } from './gameReducer'\r\nimport { statisticsReducer } from './statisticsReducer'\r\nimport { logicStuffReducer } from './logicStuffReducer'\r\nimport { fieldReducer } from './fieldReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  game: gameReducer,\r\n  statistics: statisticsReducer,\r\n  logic: logicStuffReducer,\r\n  field: fieldReducer,\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from './reducers/rootReducer'\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}